var search_data = {"index":{"searchIndex":["activerecord","activesupport","testcase","applicationcontroller","applicationhelper","classifier","classifiercontroller","classifiercontrollertest","classifierhelper","classifierhelpertest","createpeople","homecontroller","logger","naivebayesclassifier","application","object","peoplecontroller","peoplecontrollertest","peoplehelper","peoplehelpertest","person","persontest","arrayofattributes()","attr_probability()","change()","classifierresults()","classify()","create()","destroy()","edit()","index()","index()","index()","is_active?()","mean()","new()","posterior()","probability()","show()","update()","variance()","gemfile","gemfile.lock","readme","rakefile","application.js","classifier.js.coffee","people.js.coffee","application.css.scss","classifier.css.scss","people.css.scss","scaffolds.css.scss","index.json.jbuilder","show.json.jbuilder","config.ru","production.sqlite3","test.sqlite3","development.log","test.log","404.html","422.html","500.html","favicon.ico","robots"],"longSearchIndex":["activerecord","activesupport","activesupport::testcase","applicationcontroller","applicationhelper","classifier","classifiercontroller","classifiercontrollertest","classifierhelper","classifierhelpertest","createpeople","homecontroller","logger","naivebayesclassifier","naivebayesclassifier::application","object","peoplecontroller","peoplecontrollertest","peoplehelper","peoplehelpertest","person","persontest","classifier::arrayofattributes()","classifier::attr_probability()","createpeople#change()","classifiercontroller#classifierresults()","classifier::classify()","peoplecontroller#create()","peoplecontroller#destroy()","peoplecontroller#edit()","classifiercontroller#index()","homecontroller#index()","peoplecontroller#index()","applicationhelper#is_active?()","classifier::mean()","peoplecontroller#new()","classifier::posterior()","classifier::probability()","peoplecontroller#show()","peoplecontroller#update()","classifier::variance()","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ActiveRecord","","ActiveRecord.html","",""],["ActiveSupport","","ActiveSupport.html","",""],["ActiveSupport::TestCase","","ActiveSupport/TestCase.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Classifier","","Classifier.html","",""],["ClassifierController","","ClassifierController.html","",""],["ClassifierControllerTest","","ClassifierControllerTest.html","",""],["ClassifierHelper","","ClassifierHelper.html","",""],["ClassifierHelperTest","","ClassifierHelperTest.html","",""],["CreatePeople","","CreatePeople.html","",""],["HomeController","","HomeController.html","",""],["Logger","","Logger.html","",""],["NaiveBayesClassifier","","NaiveBayesClassifier.html","",""],["NaiveBayesClassifier::Application","","NaiveBayesClassifier/Application.html","",""],["Object","","Object.html","",""],["PeopleController","","PeopleController.html","",""],["PeopleControllerTest","","PeopleControllerTest.html","",""],["PeopleHelper","","PeopleHelper.html","",""],["PeopleHelperTest","","PeopleHelperTest.html","",""],["Person","","Person.html","",""],["PersonTest","","PersonTest.html","",""],["arrayOfAttributes","Classifier","Classifier.html#method-c-arrayOfAttributes","(gender, attribute)","<p>Takes in a gender of &#39;male&#39; or &#39;female&#39; and a attribute of\nPerson Return array of values …\n"],["attr_probability","Classifier","Classifier.html#method-c-attr_probability","(attribute, attribute_arr)","<p>Takes in the value of the attribute the user submitted and  the array of\nvalues of an attribute in the …\n"],["change","CreatePeople","CreatePeople.html#method-i-change","()",""],["classifierresults","ClassifierController","ClassifierController.html#method-i-classifierresults","()",""],["classify","Classifier","Classifier.html#method-c-classify","(params)","<p>Takes in all the values of the attributes of a person from the user Returns\ngender of sample\n"],["create","PeopleController","PeopleController.html#method-i-create","()","<p>POST /people POST /people.json\n"],["destroy","PeopleController","PeopleController.html#method-i-destroy","()","<p>DELETE /people/1 DELETE /people/1.json\n"],["edit","PeopleController","PeopleController.html#method-i-edit","()","<p>GET /people/1/edit\n"],["index","ClassifierController","ClassifierController.html#method-i-index","()",""],["index","HomeController","HomeController.html#method-i-index","()",""],["index","PeopleController","PeopleController.html#method-i-index","()","<p>GET /people GET /people.json\n"],["is_active?","ApplicationHelper","ApplicationHelper.html#method-i-is_active-3F","(link_path)","<p>Sets current page&#39;s navigation bar to active\n"],["mean","Classifier","Classifier.html#method-c-mean","(attribute_arr)","<p>Takes in an array of values Returns the mean\n"],["new","PeopleController","PeopleController.html#method-i-new","()","<p>GET /people/new\n"],["posterior","Classifier","Classifier.html#method-c-posterior","(gender, fields)","<p>Takes in a gender &#39;male&#39; or &#39;female&#39; Takes in a Field\nstructure with the attributes we …\n"],["probability","Classifier","Classifier.html#method-c-probability","(gender)","<p>Takes in a gender string of &#39;male&#39; or &#39;female&#39; Returns the\nprobability a gender based …\n"],["show","PeopleController","PeopleController.html#method-i-show","()","<p>GET /people/1 GET /people/1.json\n"],["update","PeopleController","PeopleController.html#method-i-update","()","<p>PATCH/PUT /people/1 PATCH/PUT /people/1.json\n"],["variance","Classifier","Classifier.html#method-c-variance","(attribute_arr, mean)","<p>Takes in an array of values and the mean Takes in an array of mean so it\ndoesnt have to be calculated …\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Bundle edge Rails instead: gem &#39;rails&#39;, github:\n&#39;rails/rails&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  actionmailer (4.1.6)\n    actionpack (= 4.1.6)\n    actionview ...</pre>\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["application.js","","app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["classifier.js.coffee","","app/assets/javascripts/classifier_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["people.js.coffee","","app/assets/javascripts/people_js_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["application.css.scss","","app/assets/stylesheets/application_css_scss.html","","\n<pre>This is a manifest file that&#39;ll be compiled into application.css, which will include all the files\nlisted ...</pre>\n"],["classifier.css.scss","","app/assets/stylesheets/classifier_css_scss.html","","<p>// Place all the styles related to the classifier controller here. // They\nwill automatically be included …\n"],["people.css.scss","","app/assets/stylesheets/people_css_scss.html","","<p>// Place all the styles related to the people controller here. // They will\nautomatically be included …\n"],["scaffolds.css.scss","","app/assets/stylesheets/scaffolds_css_scss.html","","<p>body {\n\n<pre>background-color: #fff;\ncolor: #333;\nfont-family: verdana, arial, helvetica, sans-serif;\nfont-size: ...</pre>\n"],["index.json.jbuilder","","app/views/people/index_json_jbuilder.html","","<p>json.array!(@people) do |person|\n\n<pre>json.extract! person, :id, :gender, :height, :weight\njson.url person_url(person, ...</pre>\n"],["show.json.jbuilder","","app/views/people/show_json_jbuilder.html","","<p>json.extract! @person, :id, :gender, :height, :weight, :created_at,\n:updated_at\n"],["config.ru","","config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require ::File.expand_path(&#39;../config/environment&#39;, …\n"],["production.sqlite3","","db/production_sqlite3.html","",""],["test.sqlite3","","db/test_sqlite3.html","",""],["development.log","","log/development_log.html","","<p>Started GET “/people” for 127.0.0.1 at 2015-03-01 10:48:44 -0500\n<p>ActiveRecord::PendingMigrationError …\n"],["test.log","","log/test_log.html","","\n<pre>\u001b[1m\u001b[36m (131.1ms)\u001b[0m  \u001b[1mCREATE TABLE &quot;classifiers&quot; (&quot;id&quot; INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, ...</pre>\n"],["404.html","","public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</pre>\n"],["422.html","","public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</pre>\n"],["500.html","","public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</pre>\n"],["favicon.ico","","public/favicon_ico.html","",""],["robots","","public/robots_txt.html","","<p>See www.robotstxt.org/robotstxt.html for documentation on how to use the\nrobots.txt file\n<p>To ban all spiders …\n"]]}}